Git – Version control software; created by Linus Torvalds

Github – web server to do projects with git



Create new repository:

First, make new repo on Github
Clone into folder locally
Then add files on local computer and push to remote






Check configuration of git; information is stored in /.gitconfig:
git config -l


Repo settings (origin location etc.) are stored in:
./.git/config


git init
Initialize git tracking in a folder

git status	
Check for status of files in a repository
Shows edits or new files in directory

git add file1 file2 ...	
Adds file1, file2, ... to tracked files

git add .		
Add all changes into staging area


git commit -m “Message”	
Upload changes

git log		
View history of commits

git diff <branch-name>
shows changes in the code





Branches:

git branch				
Display current branch

git branch -b <new-branch-name>
Create a new branchA

git branch -d <BRANCH-NAME>
Delete a branch

git checkout <branch-name>		
Move to <branch-name> branch









Connect local tracking to Github or other remote destination:
git remote add origin git@github.com:jonkracht/pdga_rating_scraper.git
git branch -M master
git push -u origin master

Check remote origins connected to repo
git remove -v




Merge:  integrate changes in a branch with master branch

git merge <branch_name>


Fork a Repo:  Create a local copy of some other repository



Push:  Send code out

git push --set-upstream origin <BRANCH-NAME>
OR
git push -u origin <BRANCH-NAME>



Pull (request):  Request main branch of something to download code from you.




Undo a commit:
git reset HEAD~1
('1' is the most recent commit)

git checkout {commit hash:  a long string of characters}   		
Go to a previous point in the code’s development defined by hash

Or git revert HASH_NUM




Use memory cache to retain Github user name and login
git config --global credential.helper cache

Set time period to use the cache (timeout is in seconds)
git config --global credential.helper 'cache --timeout=3600'

Git configurations (name, email, etc.) is stored in /home/jon/.gitconfig




.md extensions stands for MarkDown



Delete a repository:
Navigate to desired repo
rm -rf .git



Download a copy of a repository:
git clone https://some.url.com
or
via ssh

Note: To use ssh key rather than password validation, clone using SSH rather than HTTPS
Ex.  git clone  git@github.com:[USER_NAME]/[REPO_NAME].git



Creating a .gitignore file to indicate files that are not to be tracked
Navigate to desired directory and create a ".gitignore" file


